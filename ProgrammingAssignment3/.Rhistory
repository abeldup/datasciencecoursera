install.packages("slidify")
source("http://bioconductor.org/biocLite.R")
?biocLite
biocLite
biocLite("AnnotationDbi")
library(ggplot2)
search()
find.package("devtools")
find.package("devtools")
library(devtools)
find_rtools()
a <- available.packages()
head(rownames(a), 3)
install.packages("KernSmooth")
library(KernSmooth)
q()
install.packages("swirl");
q()
install.packages("swirl");
library("swirl");
ls();
ls()
rm(list=ls());
ls();
swirl
swirl();
exit
q()
ls()
library(swirl)
swirl()
c(0.5, 55, -10, 6)
num_vect =  c(0.5, 55, -10, 6)
num_vect = c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
c("My", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name = c(my_char, "Abel")
my_name <- c(my_char, "Abel")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
c(y, z)
my_data <- sample(c(y, z), 100)
my_data
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3), c(5), c(7)]
hint()
hint
x[3:7]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
names(vect2)
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrx2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient",
"patient",
)
cname <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- colnames
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ++ 7
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean( c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x) {x[1]})
evaluate(function(x) {x[1]}, c(8, 4, 0))
evaluate(function(x) {x[3]}, c(8, 4, 0))
evaluate(function(x) {x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
telegram("Almost time to go home!")
submit()
submit()
mad_libs(place = "work", adjective = "rabid", noun = "thing")
submit()
"I" %p% "love" %p% "R"
info()
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
class(FLAGS)
class(flags)
viewinfo()
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
head(flag_shapes)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
flags$SouthAfrica
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
exit
q()
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/best.R')
conddata
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
getwd()
setwd("C:/Users/abel.duplessis/Documents/GitHub/datasciencecoursera/ProgrammingAssignment3")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heartattack")
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
?order
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
?order
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack")
rankall("heartattack", 20)
rankall("heart attack", 20)
rankall("pneumonia", "worst")
rankall("heart failure", 10)
rankall("heart attack", 10)
rankall("heart attack", 11)
rankall("heart failure", 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
rankall("heart attack", 4)
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
rankall("heart attack", 4)
submit()
submit()
submit()
